{"swagger":"2.0","info":{"description":"This is a description of APIs for microservices developed as part of project.\n","version":"1.0.0","title":"People's Database","termsOfService":"http://i.imgur.com/EZVDzF2.jpg","contact":{"email":"devemail@columbia.edu"}},"tags":[{"name":"person","description":"Information about people","externalDocs":{"description":"Find out more","url":"https://microservicesfall17.slack.com/messages/C74C72YCD/"}}],"paths":{"/person":{"post":{"tags":["person"],"summary":"Add a new person to our customers","operationId":"addPerson","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"Person object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/Person"}}],"responses":{"200":{"description":"Successfully created object.","schema":{"$ref":"#/definitions/PersonRes"}},"405":{"description":"Invalid input"}}},"put":{"tags":["person"],"summary":"Update an existing person","operationId":"updatePerson","consumes":["application/json"],"parameters":[{"in":"body","name":"body","description":"Person object that needs to be added to the database","required":true,"schema":{"$ref":"#/definitions/PersonRes"}}],"responses":{"204":{"description":"Create/Update successful"},"400":{"description":"Invalid ID supplied"},"405":{"description":"Validation exception"}}},"get":{"tags":["person"],"summary":"Gets a list of people from database.","operationId":"getPeople","produces":["application/json"],"parameters":[{"name":"lastname","in":"query","description":"Last name to query","type":"string","required":false},{"name":"firstname","in":"query","description":"Filter by first name of the person.","type":"string","required":false},{"name":"title","in":"query","description":"Filter by title of the person","type":"string","required":false},{"name":"postalcode","in":"query","description":"Postal code of the person's residence.","type":"string","required":false},{"name":"email","in":"query","description":"Email id of the person.","type":"string","required":false},{"name":"addressId","in":"query","description":"People living in the given address id.","type":"string","required":false},{"name":"lastnameprefix","in":"query","description":"filter by last name prefix","type":"string","required":false},{"name":"firstnameprefix","in":"query","description":"Filter by first name prefix","type":"string","required":false}],"responses":{"200":{"description":"Successfully returning","schema":{"type":"array","items":{"$ref":"#/definitions/PersonList"}}}}}},"/person/{personId}":{"get":{"tags":["person"],"summary":"Gets a person details from database.","operationId":"getPerson","produces":["application/json"],"parameters":[{"name":"personId","in":"path","description":"ID of the person","type":"string","required":true}],"responses":{"200":{"description":"Successfully returning the person","schema":{"$ref":"#/definitions/PersonRes"}},"404":{"description":"Person not found in DB."}}},"put":{"tags":["person"],"summary":"Update an existing person","operationId":"updatePersonUsingId","consumes":["application/json"],"parameters":[{"in":"body","name":"body","description":"Person object that needs to be added to the database","required":true,"schema":{"$ref":"#/definitions/PersonRes"}}],"responses":{"204":{"description":"Create/Update successful"},"400":{"description":"Invalid ID supplied"},"405":{"description":"Validation exception"}}},"delete":{"tags":["person"],"summary":"Deletes a person from database.","operationId":"deletePerson","parameters":[{"name":"personId","in":"path","description":"ID of the person","type":"string","required":true}],"responses":{"204":{"description":"The person has been successfully deleted."}}}}},"definitions":{"Person":{"type":"object","properties":{"lastname":{"type":"string","example":"Stinson"},"firstname":{"type":"string","example":"Barney"},"title":{"type":"string","example":"Mr."},"titleofcourtesy":{"type":"string","example":"Dr."},"postalcode":{"type":"string","example":10027},"homephone":{"type":"string","example":"347-101-1010"},"email":{"type":"string","example":"truestory@gmail.com"},"photoLink":{"type":"string","example":"https://goo.gl/images/GNx4yf"},"addressId":{"type":"string","example":"676f5ccf-2e2c-4b37-9fc0-9a1e9bc91434"},"notes":{"type":"string","example":"It's gonna be legend.. wait for it.."}}},"PersonRes":{"type":"object","properties":{"id":{"type":"string","example":"67793b82-b156-402a-8c23-1737ff187502"},"lastname":{"type":"string","example":"Stinson"},"firstname":{"type":"string","example":"Barney"},"title":{"type":"string","example":"Mr."},"titleofcourtesy":{"type":"string","example":"Dr."},"postalcode":{"type":"string","example":10027},"homephone":{"type":"string","example":"347-101-1010"},"email":{"type":"string","example":"truestory@gmail.com"},"photoLink":{"type":"string","example":"https://goo.gl/images/GNx4yf"},"addressId":{"type":"string","example":"676f5ccf-2e2c-4b37-9fc0-9a1e9bc91434"},"notes":{"type":"string","example":"It's gonna be legend.. wait for it.."},"links":{"$ref":"#/definitions/PersonLinks"}}},"PersonList":{"type":"object","properties":{"data":{"type":"array","items":{"$ref":"#/definitions/PersonRes"}},"countbeforeself":{"type":"string","example":100},"total":{"type":"string","example":798},"links":{"$ref":"#/definitions/PaginationLinks"}}},"PaginationLinks":{"type":"object","properties":{"self":{"type":"string"},"first":{"type":"string"},"last":{"type":"string"},"next":{"type":"string"},"prev":{"type":"string"}}},"PersonLinks":{"type":"object","properties":{"photos":{"type":"string"},"self":{"type":"string"},"address":{"type":"string"}}}},"basePath":"/microservice/person/1.0.0","schemes":["https"],"host":"virtserver.swaggerhub.com"}